<?xml version="1.0" encoding="UTF-8"?>
<!-- file generated by db* CODECOP using the genmodel option -->
<sqale>
	<chc>
		<key>CHANGEABILITY</key>
		<name>Changeability</name>
		<chc>
			<key>ARCHITECTURE_CHANGEABILITY</key>
			<name>Architecture changeability</name>
			<!-- Try to have a single location to define your types. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2120</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use subtypes for constructs used often in your code. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2130</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid use of the RAISE_APPLICATION_ERROR built-in procedure with a hard-coded 20nnn error number or hard-coded message. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-5050</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use synonyms when accessing objects of another application schema. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-8210</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>DATA_CHANGEABILITY</key>
			<name>Data changeability</name>
			<!-- Avoid using literals in your code. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-1050</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use a format model in string to date/time conversion functions. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9010</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use a format model and NLS_NUMERIC_CHARACTERS in string to number conversion functions. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9020</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>LOGIC_CHANGEABILITY</key>
			<name>Logic changeability</name>
			<!-- Never use self-defined weak ref cursor types. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2610</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use forward declaration for private functions and procedures. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7220</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
	</chc>
	<chc>
		<key>EFFICIENCY</key>
		<name>Efficiency</name>
		<chc>
			<key>CPU_EFFICIENCY</key>
			<name>Cpu efficiency</name>
			<!-- Avoid assigning values to local variables that are not used by a subsequent statement. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2135</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use SIMPLE_INTEGER datatype when appropriate. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2230</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using SELECT * directly from a table or view. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3145</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never commit within a cursor loop. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3310</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using an IN OUT parameter as IN or OUT only. (not implemented) -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7170</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use RETURN in package initialization block. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7250</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to define your packaged/standalone function deterministic if appropriate. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7460</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid multiple DML events per trigger. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7730</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never handle multiple DML events per trigger if primary key is assigned in trigger. (not implemented) -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7740</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use SQL inside PL/SQL to read sequence numbers (or SYSDATE). -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7810</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never check existence of a row to decide whether to create it or not. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-8120</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use dbms_application_info to track program process transiently. (not implemented) -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-8510</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>MEMORY_EFFICIENCY</key>
			<name>Memory efficiency</name>
			<!-- Avoid declaring NUMBER variables, constants or subtypes with no precision. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2210</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use PLS_INTEGER instead of NUMBER for arithmetic operations with integer values. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2220</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use BULK OPERATIONS (BULK COLLECT, FORALL) whenever you have to execute a DML statement for more than 4 times. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3210</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always close locally opened cursors. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4130</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use a COALESCE instead of a NVL command, if parameter 2 of the NVL function is a function call or a SELECT statement. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4230</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use a CASE instead of a NVL2 command if parameter 2 or 3 of NVL2 is either a function call or a SELECT statement. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4240</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use a WHILE loop to process a loose array. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4360</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid use of unreferenced FOR loop indexes. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4390</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always explicitly state parameter mode. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7160</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to keep your packages small. Include only few procedures and functions that are used in the same context. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7210</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>240.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use SELECT COUNT(*) if you are only interested in the existence of a row. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-8110</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>NETWORK_USE</key>
			<name>Network use</name>
		</chc>
	</chc>
	<chc>
		<key>MAINTAINABILITY</key>
		<name>Maintainability</name>
		<chc>
			<key>READABILITY</key>
			<name>Readability</name>
			<!-- Try to label your sub blocks. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-1010</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always have a matching loop or block label. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-1020</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid defining variables that are not used. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-1030</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid nesting comment blocks. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-1070</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using the same expression on both sides of a relational comparison operator or a logical operator. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-1080</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never initialize variables with NULL. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2140</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never self-assign a variable. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2145</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use quoted identifiers. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2180</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always specify column aliases instead of expressions in GROUP BY clauses. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3183</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to move transactions within a non-cursor loop into procedures. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3320</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using identical conditions in different branches of the same IF or CASE statement. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4250</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid inverting boolean conditions with NOT. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4260</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid comparing boolean values to boolean literals. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4270</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always label your loops. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4320</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to label your EXIT WHEN statements. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4380</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use output bind arguments in the RETURNING INTO clause of dynamic DML statements rather than the USING clause. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-6020</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use named notation when calling program units. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7110</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always add the name of the program unit to its end keyword. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7120</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid standalone procedures – put your procedures in packages. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7310</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid standalone functions – put your functions in packages. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7410</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>UNDERSTANDABILITY</key>
			<name>Understandability</name>
			<!-- Avoid using the NOSONAR marker. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-0000</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid dead code. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-1040</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never overload variables. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2170</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using overly short names for explicitly or implicitly declared identifiers. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2185</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use boolean data type for values with dual meaning. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2410</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid self-assigning a column. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3115</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use table aliases when your SQL statement involves more than one source. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3120</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use ANSI SQL-92 join syntax. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3130</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use wildcards in a LIKE clause. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3195</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use %NOTFOUND instead of NOT %FOUND to check whether a cursor returned data. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4110</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use CASE rather than an IF statement with multiple ELSIF paths. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4210</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use CASE rather than DECODE. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4220</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use GOTO statements in your code. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4310</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never reuse labels in inner scopes. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4325</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use a CURSOR FOR loop to process the complete cursor results unless you are using bulk operations. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4330</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use a NUMERIC FOR loop to process a dense array. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4340</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using EXIT to stop loop processing unless you are in a basic loop. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4370</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use EXIT WHEN instead of an IF statement to exit from a loop. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4375</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use a cursor for loop to check whether a cursor returns data. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4385</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid hard-coded upper or lower bound values with FOR loops. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4395</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>15.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never handle unnamed exceptions using the error number. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-5020</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use FORMAT_ERROR_BACKTRACE when using FORMAT_ERROR_STACK or SQLERRM. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-5080</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use CREATE OR REPLACE instead of CREATE alone. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7125</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always ensure that locally defined procedures or functions are referenced. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7140</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to remove unused parameters. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7150</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using RETURN statements in a PROCEDURE. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7320</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>3.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always assign values to OUT parameters. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7330</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always make the RETURN statement the last statement of your function. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7420</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use no more than one RETURN statement within a function. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7430</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never return a NULL value from a BOOLEAN function. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7450</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use multiple UPDATE OF in trigger event clause. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7720</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always validate input parameter size by assigning the parameter to a size limited variable in the declaration section of program unit. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-8310</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to define a default value on conversion errors. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9030</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name global variables to match '^g_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9101</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name local variables to match '^l_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9102</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name cursors to match '^c_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9103</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name records to match '^r_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9104</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name collection types (arrays/tables) to match '^t_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9105</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name objects to match '^o_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9106</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name cursor parameters to match '^p_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9107</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name in parameters to match '^in_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9108</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name out parameters to match '^out_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9109</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name in/out parameters to match '^io_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9110</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name record type definitions to match '^r_.+_type$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9111</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name collection type definitions (arrays/tables) to match '^t_.+_type$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9112</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name exceptions to match '^e_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9113</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name constants to match '^co_.+$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9114</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always name subtypes to match '^.+_type$'. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9115</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
	</chc>
	<chc>
		<key>PORTABILITY</key>
		<name>Portability</name>
		<chc>
			<key>COMPILER_RELATED_PORTABILITY</key>
			<name>Compiler related portability</name>
			<!-- Never use VARCHAR data type. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2320</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>HARDWARE_RELATED_PORTABILITY</key>
			<name>Hardware related portability</name>
		</chc>
		<chc>
			<key>LANGUAGE_RELATED_PORTABILITY</key>
			<name>Language related portability</name>
			<!-- Avoid using ROWID or UROWID. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2190</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use zero-length strings to substitute NULL. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2330</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using the LONG and LONG RAW data types. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2510</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>15.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>OS_RELATED_PORTABILITY</key>
			<name>Os related portability</name>
		</chc>
		<chc>
			<key>SOFTWARE_RELATED_PORTABILITY</key>
			<name>Software related portability</name>
		</chc>
		<chc>
			<key>TIME_ZONE_RELATED_PORTABILITY</key>
			<name>Time zone related portability</name>
		</chc>
	</chc>
	<chc>
		<key>RELIABILITY</key>
		<name>Reliability</name>
		<chc>
			<key>ARCHITECTURE_RELIABILITY</key>
			<name>Architecture reliability</name>
			<!-- Try to use anchored declarations for variables, constants and types. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2110</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always define your VARCHAR2 variables using CHAR SEMANTIC (if not defined anchored). -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2340</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always specify the target columns when coding an insert statement. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3110</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>3.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use anchored records as targets for your cursors. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3140</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>ARCHITECTURE_RELIABILITY</key>
			<name>Architecture reliability</name>
			<!-- Timeout occurred (after n seconds) during load/parse/validation of resource. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>E-0001</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Syntax error. Please check the limitations and contact the author if the code can be compiled successfully in your environment. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>E-0002</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>3.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- License limit reached. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>E-0003</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>DATA_RELIABILITY</key>
			<name>Data reliability</name>
			<!-- Avoid storing ROWIDs or UROWIDs in database tables. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-1060</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>60.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try using FX in string to date/time conversion format model to avoid fuzzy conversion. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9040</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>EXCEPTION_HANDLING</key>
			<name>Exception handling</name>
			<!-- Avoid initializing variables using functions in the declaration section. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2160</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never assign predefined exception names to user defined exceptions. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-5030</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid use of WHEN OTHERS clause in an exception section without any other specific handlers. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-5040</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid unhandled exceptions -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-5060</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using Oracle predefined exceptions -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-5070</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>FAULT_TOLERANCE</key>
			<name>Fault tolerance</name>
			<!-- Always use 1 as lower and COUNT() as upper bound when looping through a dense array. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4350</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>INSTRUCTION_RELIABILITY</key>
			<name>Instruction reliability</name>
			<!-- Never define more than one comment with hints. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9600</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use unknown hints. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9601</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use the alias name instead of the table name. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9602</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never reference an unknown table/alias. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9603</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use an invalid stats method. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9604</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use an invalid stats keyword. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9605</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>LOGIC_RELIABILITY</key>
			<name>Logic reliability</name>
			<!-- Avoid comparisons with NULL value, consider using IS [NOT] NULL. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2150</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using CHAR data type. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-2310</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Try to use identity columns for surrogate keys. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3150</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid visible virtual columns. (not implemented) -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3160</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use DEFAULT ON NULL declarations to assign default values to table columns if you refuse to store NULL values. (not implemented) -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3170</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always specify column names instead of positional references in ORDER BY clauses. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3180</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always specify column names instead of positional references in GROUP BY clauses. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3182</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use ROWNUM at the same query level as ORDER BY. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3185</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using NATURAL JOIN. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3190</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always process saved exceptions from a FORALL statement. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-3220</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid using %NOTFOUND directly after the FETCH when working with BULK OPERATIONS and LIMIT clause. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4120</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid executing any statements between a SQL operation and the usage of an implicit cursor attribute. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4140</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use parameters or pull in definitions rather than referencing external variables in a local program unit. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7130</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid declaring global variables public. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7230</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use DML within a SQL macro. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7910</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>RESOURCE_RELIABILITY</key>
			<name>Resource reliability</name>
		</chc>
		<chc>
			<key>SYNCHRONIZATION_RELIABILITY</key>
			<name>Synchronization reliability</name>
			<!-- Always use application locks to ensure a program unit is only running once at a given time. (not implemented) -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-8410</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>UNIT_TESTS</key>
			<name>Unit tests</name>
		</chc>
	</chc>
	<chc>
		<key>REUSABILITY</key>
		<name>Reusability</name>
		<chc>
			<key>MODULARITY</key>
			<name>Modularity</name>
			<!-- Never use OUT parameters to return values from a function. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7440</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>3.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>TRANSPORTABILITY</key>
			<name>Transportability</name>
		</chc>
	</chc>
	<chc>
		<key>SECURITY</key>
		<name>Security</name>
		<chc>
			<key>API_ABUSE</key>
			<name>Api abuse</name>
		</chc>
		<chc>
			<key>ERRORS</key>
			<name>Errors</name>
		</chc>
		<chc>
			<key>INPUT_VALIDATION_AND_REPRESENTATION</key>
			<name>Input validation and representation</name>
		</chc>
		<chc>
			<key>SECURITY_FEATURES</key>
			<name>Security features</name>
			<!-- Always prefix Oracle supplied packages with owner schema name. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7510</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Never use parameter in string expression of dynamic SQL. Use asserted local variable instead. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-9501</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>0.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
	</chc>
	<chc>
		<key>TESTABILITY</key>
		<name>Testability</name>
		<chc>
			<key>INTEGRATION_TESTABILITY</key>
			<name>Integration testability</name>
			<!-- Try to use a error/logging framework for your application. (not implemented) -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-5010</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Always use a character variable to execute dynamic SQL. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-6010</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>UNIT_TESTABILITY</key>
			<name>Unit testability</name>
			<!-- Never use unconditional CONTINUE or EXIT in a loop. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-4365</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>2.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<!-- Avoid cascading triggers. -->
			<chc>
				<rule-repo>trivadis</rule-repo>
				<rule-key>G-7710</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>LINEAR_OFFSET</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>15.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
	</chc>
</sqale>
